@using PagedList;
@using PagedList.Mvc;
@model IPagedList<InventoryManagerment.Models.DirectoryImage>
@{
    ViewBag.Title = "Quản Lý Phiếu Giao Hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string converURl(string url)
    {
        return @"https://tantuanhoan.com" + url;
    }
    string getNameUser(long id)
    {
        return new InventoryManagerment.DataAccess().GetUserByID(id).Name;
    }
}
<style>

    .filter-name{
        display: none !important
    }
    #listPaginationProduct {
        overflow-x: auto; /* Cho phép cuộn ngang */
        max-width: 100%; /* Giới hạn chiều rộng tối đa */
        white-space: nowrap; /* Ngăn chặn xuống dòng */
    }
    .square-image {
        width: 150px;
        height: 150px;
        object-fit: cover;
        cursor: pointer; /* Cho biết ảnh có thể nhấp vào */
        text-align: left;
        margin-right: 10px; /* khoảng cách bên phải */
        margin-bottom: 10px; /* khoảng cách bên dưới */
    }

    .bill-selected {
        background-color: mediumaquamarine;
    }

    #imageContainer {
        display: flex;
        flex-direction: row; /* Đổi từ column sang row */
        flex-wrap: wrap; /* Ngăn chặn việc xuống hàng */
        overflow-x: auto; /* Cho phép cuộn ngang nếu hình ảnh vượt quá chiều rộng của container */
        align-items: center; /* Căn giữa theo chiều dọc */
    }

    /* Máy tính */
    @@media (min-width: 992px) {
        .col-lg-5col {
            flex: 0 0 20%;
            max-width: 20%;
        }

        .border-bot {
            border-bottom: 2px solid;
            width: 100%;
        }
    }

    /* Máy tính bảng */
    @@media (min-width: 760px) and (max-width: 992px) {
        .col-md-3col {
            flex: 0 0 33.33%;
            max-width: 33.33%;
        }

        .border-bot {
            border-bottom: 2px solid;
        }
    }

    /* Điện thoại */
    @@media (max-width: 760px) {
        .col-1col {
            flex: 0 0 100%;
            max-width: 100%;
        }

        .border-bot {
            border-bottom: 2px solid;
        }
    }

    .list-group-item {
        border: none !important
    }

    .title-case {
        text-transform: capitalize;
    }
</style>
<style>
    .card {
        box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px; /* Thêm bóng mờ cho card */
        transition: transform 0.3s, box-shadow 0.3s; /* Thêm hiệu ứng chuyển động */
        border: 1px solid transparent; /* Thêm viền trong suốt */
        overflow: auto;
        overflow: hidden; /* Thêm dòng này */
        position: relative; /* Thêm dòng này */
        max-height: 480px;
    }

        .card:hover {
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15); /* Tăng bóng mờ khi di chuột qua */
            border-color: #007bff; /* Thay đổi màu viền khi di chuột qua */
        }

    .bg-image img {
        transition: transform 0.3s;
    }

    .is-selected {
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.25);
        border: 2px solid transparent;
        border-color: #FF0000;
    }

    .card.is-selected:hover {
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.35); /* Giữ nguyên bóng mờ */
        border-color: #FF0000; /* Đặt màu viền là màu đỏ, giữ nguyên màu viền khi có class is-selected */
    }

    .text-edit {
        border: 1px solid #ccc;
        padding: 8px 12px;
        border-radius: 4px;
        font-size: 14px;
        width: 100%;
    }
</style>
<div class="modal fade" id="detailModal" tabindex="-1" role="dialog" aria-labelledby="detailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <!-- Sử dụng modal-lg để modal lớn hơn -->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title font-weight-normal" id="detailModalLabel">Chi Tiết Phiếu Giao Hàng</h5>
            </div>
            <div class="modal-body">
                <!-- Chi tiết phiếu gửi -->
                <div id="locationDetails" class="mb-4">
                    <h4 class="title-case" style="text-align: center"> <span id="customername"></span><span style="color:seagreen" id="invoiceIcon"></span></h4>
                    <p><b>Ngày Gửi:</b> <span id="created_date"></span></p>
                    <p><b>Người Gửi:</b> <span id="username"></span></p>
                    <p class="title-case"><b>Ghi Chú:</b> <span id="note"></span></p>
                    <p class="title-case"><b>Địa Chỉ:</b> <span id="description"></span></p>
                    <a class="btn btn-icon btn-3 btn-success" href="#" target="_blank" id="linktoMap"><span class="btn-inner--icon"><i class="material-icons">map</i></span> <span class="btn-inner--text">Google Map</span></a>
                    <input hidden multiple type="file" id="imageInput" />
                    <button hidden id="addImages" class="btn btn-icon btn-2 btn-primary" type="button">
                        <span class="btn-inner--icon"><i class="material-icons">add_photo_alternate</i></span>
                    </button>
                </div>

                <!-- Danh sách hình ảnh -->
                <div id="imageContainer" class="d-flex flex-wrap">
                    <!-- Các ảnh sẽ được thêm vào đây -->
                </div>
            </div>
            <div class="modal-footer">
                <button hidden id="btnSaveEdit" type="button" class="btn bg-gradient-success">Lưu</button>
                <button hidden id="btnCancelEdit" type="button" class="btn bg-gradient-danger">Hủy</button>
                <button id="btnOpenModalMerge" type="button" class="btn bg-gradient-success">Tích Hợp</button>
                <button id="btnEdit" type="button" class="btn bg-gradient-info">Sửa</button>
                <button id="btnDelete" type="button" data-spcode="" onclick="DeleteImageFolder(this)" class="btn bg-gradient-danger">Xóa</button>
                <button type="button" class="btn bg-gradient-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="searchModal" tabindex="-1" role="dialog" aria-labelledby="searchtitleModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title font-weight-normal" id="searchtitleModal">Tìm kiếm phiếu giao hàng</h5>
                <button type="button" class="btn-close text-dark" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Index", "ReceiveBill", method: FormMethod.Get))
                {
                    <div class="input-group mb-3">
                        <div class="input-group input-group-static mb-4">
                            <input id="txtCustomer" placeholder="Nhập Tên Khách Hàng" type="text" class="form-control" onfocus="focused(this)" onfocusout="defocused(this)" value="" name="customerName">
                        </div>
                        <div class="input-group input-group-static mb-4">
                            <textarea placeholder="Nhập Ghi Chú" type="text" class="form-control" onfocus="focused(this)" onfocusout="defocused(this)" name="note"></textarea>
                        </div>
                        <div class="input-group input-group-static mb-4">
                            <input id="txtAddress" placeholder="Nhập Địa Chỉ" type="text" class="form-control" onfocus="focused(this)" onfocusout="defocused(this)" value="" name="address">
                        </div>
                        <div class="input-group input-group-static mb-4">
                            <input id="txtStaff" placeholder="Nhập Tên Người Giao" type="text" class="form-control" onfocus="focused(this)" onfocusout="defocused(this)" value="" name="staffName">
                        </div>
                        <div class="input-group input-group-static mb-4">
                            <input type="date" class="form-control" onfocus="focused(this)" onfocusout="defocused(this)" value="" id="dateExport" name="time">
                        </div>
                        <div class="input-group input-group-static mb-4">
                            <select id="pageSize" name="pageSize" class="form-control">
                                <option value="10">Số dòng hiển thị</option>
                                @for (int a = 15; a <= 100; a += 5)
                                {
                                    <option value="@a">@a</option>
                                }
                            </select>
                        </div>
                    </div>
                    <button id="btnSearch" type="submit" class="btn btn-icon btn-3 btn-outline-primary input-group-outline input-group-text">
                        <span class="btn-inner--icon"><i class="material-icons">search</i></span>
                        <span class="btn-inner--text">Tìm Kiếm</span>
                    </button>
                }
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modalMerge" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="modalMergeLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalMergeLabel">Danh sách hóa đơn</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">x</button>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="row">
                        <div class="col-6">
                            <div class="input-group input-group-static my-3">
                                <label>Tên Khách Hàng</label>
                                <input id="FilterCustomerName" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="input-group input-group-static my-3">
                                <label>Chọn Ngày</label>
                                <input id="dateInvoice" type="date" class="form-control">
                            </div>
                        </div>
                    </div>

                    <div id="listInvoice" class="list-group overflow-auto overflow-x-auto overflow-y-auto">

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnMerge" type="button" class="btn btn-primary">Tích hợp</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col">
        <h3>Phiếu Giao Hàng</h3>
    </div>
    <div class="col" style="text-align:right">
        <button hidden id="btnCloseSelectMode" class="btn btn-icon btn-3 btn-success" type="button">
            <span class="btn-inner--icon"><i class="material-icons">close</i></span>
            <span class="btn-inner--text">Hủy</span>
        </button>
        <button hidden id="btnDeleteMultiple" class="btn btn-icon btn-3 btn-danger" type="button">
            <span class="btn-inner--icon"><i class="material-icons">done</i></span>
            <span class="btn-inner--text">Đồng ý</span>
        </button>
        <div class="btn-group dropdown">
            <button type="button" class="btn btn-info dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="material-icons">construction</i> Công cụ
            </button>
            <ul class="dropdown-menu px-2 py-3" aria-labelledby="dropdownMenuButton">
                <li><a id="selectDelete" class="dropdown-item border-radius-md" href="javascript:;">Xóa</a></li>
            </ul>
        </div>
        <button class="btn btn-icon btn-3 btn-primary" type="button" data-bs-toggle="modal" data-bs-target="#searchModal">
            <span class="btn-inner--icon"><i class="material-icons">search</i></span>
            <span class="btn-inner--text">Tìm kiếm</span>
        </button>
    </div>
</div>
<div class="row" id="listFolder">
    @foreach (var item in Model)
    {
        <div id="@item.code" class="select-card col-1col col-md-3col col-lg-5col mt-3">
            <div class="card" onclick="GetImagesByDirectory(this)" data-code="@item.code">
                <div class="card-header">
                    <p class="title-case" style="text-align: center;">
                        <b>@item.NameCustomer</b>
                        @if (item.numberOfReceivce > 0)
                        {
                            <span style="color: seagreen"><i class="material-icons align-middle">check_circle</i></span>
                        }
                    </p>
                    <p><b><i class="material-icons align-middle">today</i> : @item.Time.ToString("dd/MM/yyyy - HH:mm")</b></p>
                    <p><b><i class="material-icons align-middle">record_voice_over</i> : @getNameUser(item.UserID)</b></p>
                </div>
                <div class="bg-image hover-overlay rounded">
                    <img style="cursor: pointer;" src="@converURl(item.FirstImage)" class="w-100">
                </div>
            </div>
        </div>
    }
    <div class="mt-3" style="text-align:center">
        <div style="display:inline-block" id="listPaginationProduct">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = ViewBag.PageSize, customerName = ViewBag.customerName, staffName = ViewBag.staffName, address = ViewBag.address, note = ViewBag.noteReceiveBill, time = ViewBag.time }))
        </div>
    </div>
</div>
<div id="popover-content" class="d-none">
    <label>Nhập mật khẩu để xóa</label>
    <input id="confirmPassword" type="text" placeholder="Mật khẩu" class="text-edit form-control" required />
    <button id="submitPassword" class="btn btn-danger mt-2">Xóa</button>
</div>
<!-- Modal -->
@section jsFooter{
    <script>
        let selectedFiles = [];
        let isSelecting = false;
        let isEditing = false;
        let detail = {};
        let urlImage = '';
        $(document).ready(function () {
            addClasslist();
            removeElement();
            setAutoComplete();
            handleBtn();
            $('#detailModal').on('hidden.bs.modal', function (e) {
                toggleBtn('off')
                selectedFiles = [];
                $('.jconfirm').remove();
            });
            //Xử lý xóa hình ảnh
            $('#imageContainer').on('click', 'img', function (event) {
                var image_container = $(this).closest('div.img-container.mr-2');
                var image = image_container.find('img');

                if (isEditing) {
                    event.preventDefault();
                    if (parseInt($('#imageContainer div.img-container').length) == 1) {
                        $.alert('Phải có duy nhất 1 ảnh');
                        return;
                    }
                    if ($(image).hasClass('new-images')) {
                        $.confirm({
                            title: 'Thông báo',
                            content: 'Bạn có muốn xóa ảnh này?',
                            buttons: {
                                confirm: {
                                    text: 'Đồng ý',
                                    action: function () {
                                        // Lấy giá trị data-index từ imgContainer
                                        var index = parseInt(image.attr('data-index'));

                                        // Xóa tệp tương ứng khỏi mảng selectedFiles
                                        if (index >= 0 && index < selectedFiles.length) {
                                            selectedFiles.splice(index, 1);
                                        }

                                        // Xóa hình ảnh khỏi giao diện
                                        image_container.remove();
                                    }
                                },
                                cancel: {
                                    text: 'Hủy',
                                    action: function () {

                                    }
                                }
                            }
                        });
                    }
                    else {
                        $.confirm({
                            title: 'Thông báo',
                            content: 'Bạn có muốn xóa vĩnh viễn ảnh này?',
                            buttons: {
                                confirm: {
                                    text: 'Đồng ý',
                                    action: function () {
                                        showSpinner();
                                        var folderName = $(image).attr('src');
                                        var fileName = extractFileNameFromUrl($(image).attr('src'))
                                        var code = $("#btnDelete").attr("data-spcode");
                                        $.post('/ReceiveBill/DeleteImage/', { fileName: fileName, code: code }, function (data) {
                                            if (data.result) {
                                                image_container.remove();
                                                $.alert(data.message, 'Thông báo')
                                            }
                                            else {
                                                $.alert(data.message, 'Thông báo')
                                            }
                                            hideSpinner();
                                        });
                                    }
                                },
                                cancel: {
                                    text: 'Hủy',
                                    action: function () {

                                    }
                                }
                            }
                        });
                    }
                }
            });
        })
        function setAutoComplete() {
            showSpinner()
            $.get("/ReceiveBill/GetAutoComplete/", {}, function (data) {
                AutoComplete(data.customers, $("#txtCustomer"));
                AutoComplete(data.users, $("#txtStaff"));
                hideSpinner();
            });
        }
        function removeElement() {
            $("#sidenav-main").remove();
            $("#iconNavbarSidenav").remove();
        }
        function encodeUrlSegment(segment) {
            return encodeURIComponent(segment);
        }
        function convertToFullUrl(dbUrl) {
            var baseUrl = "https://tantuanhoan.com";
            var parts = dbUrl.split('\\').filter(Boolean); // Loại bỏ các phần tử rỗng

            // Mã hóa từng phần của URL
            var encodedParts = parts.map(encodeUrlSegment);

            // Ghép lại thành URL hoàn chỉnh
            var fullUrl = baseUrl + '/' + encodedParts.join('/');

            return fullUrl;
        }
        function updateModal(data) {
            // Xử lý danh sách hình ảnh
            var imageContainer = document.getElementById('imageContainer');
            imageContainer.innerHTML = ''; // Xóa nội dung cũ
            data.listImages.forEach(function (imagePath, index) {
                urlImage = extractPathFromUrl(imagePath);
                var imageUrl = convertToFullUrl(imagePath);
                var imgElement = document.createElement('a'); // Thay đổi từ 'img' sang 'a'
                imgElement.href = imageUrl; // Đặt thuộc tính href cho thẻ a
                imgElement.setAttribute('data-fancybox', 'gallery'); // Thêm thuộc tính này để fancybox biết đây là một mục
                var imgThumbnail = document.createElement('img'); // Tạo một thẻ img để hiển thị hình ảnh thu nhỏ
                imgThumbnail.src = imageUrl;
                imgThumbnail.classList.add('img-fluid', 'mb-3', 'square-image');
                imgElement.appendChild(imgThumbnail); // Thêm hình ảnh thu nhỏ vào thẻ a

                var imgContainer = document.createElement('div');
                imgContainer.classList.add('img-container', 'mr-2');
                imgContainer.appendChild(imgElement);
                imageContainer.appendChild(imgContainer);
            });
            // Xử lý thông tin vị trí
            var location = data.Location[0];
            $("#linktoMap").attr('href', getlinkGoogle(location.latitude, location.longitude))
            $("#note").html(data.Note)
            if (data.NumberOfLinked > 0) {
                $.each(data.listInvoiceCode, function (index, data) {
                    $("#invoiceIcon").html('<a target="_blank" href="/Bill?billCode=' + data + '"> <i class="material-icons align-middle mb-1">check_circle</i></a>');
                })
            }
            else {
                $("#invoiceIcon").html('');
            }
            document.getElementById('description').textContent = location.description;
            document.getElementById('username').textContent = data.NameStaff;
            document.getElementById('created_date').textContent = data.Time
            document.getElementById('customername').textContent = location.customername;
            $("#btnDelete").attr("data-spcode", data.Location[0].code);
        }
        function getlinkGoogle(latitude, longitude) {
            return "https://www.google.com/maps/place/" + latitude + "," + longitude;
        }
        function GetImagesByDirectory(element) {
            if (!isSelecting) {
                showSpinner();
                $.get("/ReceiveBill/GetImagesByDirectory/", { code: $(element).data("code") }, function (result) {
                    updateModal(result)
                    $('#detailModal').modal('show');
                    hideSpinner();
                });
            }
            else {
                handleSelect(element);
            }
        }
        function DeleteImageFolder(element) {
            let code = $(element).attr('data-spcode');
            let container = $("#" + code)
            $.confirm({
                title: 'Thông báo',
                content: 'Bạn có chắc muốn xóa thư mục này và tất cả hình ảnh bên trong?' +
                   '  <input id="confirmDelete" val="123" type="checkbox">',
                buttons: {
                    confirm:
                    {
                        text: 'Đồng ý',
                        key: ['enter'],
                        action: function () {
                            if ($('#confirmDelete').is(":checked")) {
                                $.post("/ReceiveBill/Delete/", { code: code }, function (result) {
                                    if (result.result) {
                                        container.remove();
                                        $("#detailModal").modal('hide')
                                        var obj = $.alert({
                                            title: 'Thông báo',
                                            content: 'Xóa thành công',
                                        });
                                        setTimeout(function () {
                                            obj.close();
                                        }, 1500);
                                        ReplaceItems();
                                    }
                                    else {
                                        $.alert({
                                            title: 'Thông Báo',
                                            content: result.Message
                                        })
                                    }
                                });               
                            } else {
                                $.alert("Vui lòng xác nhận xóa")
                                return;
                            }                         
                        }
                    },
                    cancel: {
                        text: 'Hủy',
                        action: function () {
                        }
                    }
                }
            })
        }
        function ReplaceItems() {
            var params = {
                time: getParameterByName('time'),
                customerName: getParameterByName('customerName'),
                staffName: getParameterByName('staffName'),
                note: getParameterByName('note'),
                address: getParameterByName('address'),
                page: getParameterByName('page') || 1,
                pageSize: getParameterByName('pageSize') || 15
            };
            $.get("/ReceiveBill/GetNextData", params, function (response) {
                if (response.success) {
                    var newDiv = createNewDiv(response.data, response.nameStaff, response.time)
                    $("#listFolder").append(newDiv);
                }
            });
        }
        function createNewDiv(data, nameStaff, time) {
            let div = `<div id="${data.code}" class="col-1col col-md-3col col-lg-5col mt-3">
                        <div class="card" onclick="GetImagesByDirectory(this)" data-code="${data.code}">
                           <div class="card-header">
                                <p class="title-case" style="text-align: center;"><b>${data.NameCustomer}</b></p>
                                <p><b><i class="material-icons align-middle">today</i> : ${time}</b></p>
                                <p><b><i class="material-icons align-middle">record_voice_over</i> : ${nameStaff}</b></p>
                                </div>
                                <div class="bg-image hover-overlay rounded">
                                    <img style="cursor: pointer;" src="https://tantuanhoan.com/${data.FirstImage}" class="w-100">
                                </div>
                           </div>
                       </div>`;
            return div;
        }
        function getParameterByName(name, url = window.location.href) {
            name = name.replace(/[\[\]]/g, '\\$&');
            var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
                results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, ' '));
        }
        function handleSelect(element) {
            if ($(element).hasClass('is-selected')) {
                $(element).removeClass('is-selected')
            } else {
                $(element).addClass('is-selected')
            }
        }
        function convertToDatetimeLocalFormat(dateTimeStr) {
            // Tách chuỗi thành ngày và giờ
            let [datePart, timePart] = dateTimeStr.split(' - ');

            // Chuyển đổi định dạng ngày
            let [day, month, year] = datePart.split('/');
            let formattedDate = `${year}-${month}-${day}`;

            // Kết hợp lại để tạo định dạng datetime-local
            return `${formattedDate}T${timePart}`;
        }
        function convertToDisplayFormat(input) {
            // Tách ngày và giờ từ chuỗi đầu vào
            const [datePart, timePart] = input.split('T');

            // Tách năm, tháng, ngày từ phần ngày
            const [year, month, day] = datePart.split('-');

            // Trả về chuỗi định dạng mong muốn
            return `${day}/${month}/${year} - ${timePart}`;
        }
        function handleBtn() {
            $("#selectDelete").on('click', function () {
                isSelecting = true;
                $("#btnCloseSelectMode").attr('hidden', false)
                $("#btnDeleteMultiple").attr('hidden', false)
            })
            $("#btnCloseSelectMode").on('click', function () {
                isSelecting = false;
                $("#btnCloseSelectMode").attr('hidden', true)
                $("#btnDeleteMultiple").attr('hidden', true)
                removeSelected();
            })
            $("#btnDeleteMultiple").on('click', function () {
                $.confirm({
                    title: 'Thông báo',
                    content: 'Bạn có chắc muốn xóa' +
                        '  <input id="confirmDeleteMulti" val="123" type="checkbox">',
                    buttons: {
                        confirm: {
                            text: 'Đồng ý',
                            action: function () {
                                if ($('#confirmDeleteMulti').is(":checked")) {
                                    var listSelected = $('.card.is-selected');
                                    var data = []
                                    listSelected.each(function (i, val) {
                                        data.push($(val).data('code'));
                                    })
                                    $.post("/ReceiveBill/DeleteMultiple/", { listCode: data }, function (result) {
                                        if (result) {
                                            $("#btnCloseSelectMode").attr('hidden', true)
                                            $("#btnDeleteMultiple").attr('hidden', true)
                                            removeSelected();
                                            listSelected.each(function (i, val) {
                                                $("#" + $(val).data('code')).remove();
                                            })
                                        }
                                        else {
                                            $(result.Message);
                                        }
                                    })
                                } else {
                                    $.alert("Vui lòng xác nhận xóa")
                                    return;
                                }

                            }
                        },
                        cancel: {
                            text: 'Hủy',
                            action: function () {

                            }
                        }
                    }
                })
            })
            $("#btnEdit").click(function () {
                showEditor(this);
            })
            $("#btnCancelEdit").click(function () {
                showEditor(this);
                $("#imageContainer .new-images").parent().parent().remove();
            });
            $("#btnSaveEdit").click(function () {
                saveEdit();
            })
            $("#addImages").click(function () {
                // Kích hoạt input file để chọn ảnh
                $("input[type='file']").trigger('click');
            });
            $('#imageInput').on('change', function () {
                var imageContainer = $('#imageContainer');

                for (var i = 0; i < this.files.length; i++) {
                    var file = this.files[i];

                    var reader = new FileReader();
                    reader.onload = (function (file) {
                        return function (e) {
                            var imgContainer = $('<div class="img-container mr-2"></div>');
                            var link = $('<a></a>')
                                .attr('href', e.target.result)
                                .attr('data-fancybox', 'gallery');

                            var img = $('<img>')
                                .attr('src', e.target.result)
                                .addClass('img-fluid mb-3 square-image new-images');

                            link.append(img);
                            imgContainer.append(link);
                            imageContainer.append(imgContainer);

                            // Lưu trữ tệp hình ảnh được chọn trong biến selectedFiles
                            selectedFiles.push(file);

                            // Thêm thuộc tính data-index cho imgContainer
                            imgContainer.attr('data-index', selectedFiles.length - 1);
                        };
                    })(file);

                    reader.readAsDataURL(file);
                }
            });
            $("#dateInvoice").on('change', function (event) {
                showSpinner();
                var selectedDate = $("#dateInvoice").val()
                var receivceCode1 = $("#btnDelete").attr('data-spcode')
                $.get('/ReceiveBill/GetDataInvoice/', { time: selectedDate, receiveCode: receivceCode1 }, function (data) {
                    if (data.result) {
                        getDataInvoice(data.data);
                        $('#modalMerge').modal('show')
                        hideSpinner();
                    }
                    else {
                        hideSpinner();
                        $.alert('Lỗi khi lấy hóa đơn: ' + data.message);
                    }
                })
            })
            $("#listInvoice").on("click", ".hoadon", function () {
                if ($(this).find('.border-bot').hasClass('bill-selected')) {
                    $(this).find('.border-bot').removeClass('bill-selected');
                }
                else {
                    $(this).find('.border-bot').addClass('bill-selected');
                }
            });
            $('#btnOpenModalMerge').click(function () {
                var timeSelected = $('#created_date').html();
                // Tách chuỗi để lấy phần ngày
                var dateString = timeSelected.split(' - ')[0];
                // Chuyển đổi định dạng ngày từ DD/MM/YYYY sang YYYY-MM-DD
                var dateParts = dateString.split('/');
                var formattedDate = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;
                $("#dateInvoice").val(formattedDate).trigger('change');
                $('#modalMerge').modal('show')

            })
            $('#btnMerge').click(function () {
                mergeReceiveBill();
            })
            $('#FilterCustomerName').on('input', function () {
                // Lấy giá trị từ ô input và chuyển thành chữ thường
                const searchText = $(this).val().toLowerCase();
                // Duyệt qua từng thẻ div có class là 'hoadon'
                $('.hoadon').each(function () {
                    // Lấy nội dung của thẻ h6 có class là 'customerName' và chuyển thành chữ thường
                    const customerName = $(this).find('.customerName').text().toLowerCase();
                    // Kiểm tra xem nội dung có chứa searchText hay không
                    if (removeAccents(customerName).includes(searchText)) {
                        // Hiển thị thẻ div nếu có
                        $(this).removeClass("filter-name");
                    } else {
                        // Ẩn thẻ div nếu không
                        $(this).addClass("filter-name");
                    }
                });
            });
        }
        function removeAccents(str) {
            var map = {
                'á': 'a', 'à': 'a', 'ả': 'a', 'ã': 'a', 'ạ': 'a',
                'ă': 'a', 'ắ': 'a', 'ằ': 'a', 'ẳ': 'a', 'ẵ': 'a', 'ặ': 'a',
                'â': 'a', 'ấ': 'a', 'ầ': 'a', 'ẩ': 'a', 'ẫ': 'a', 'ậ': 'a',
                'đ': 'd',
                'é': 'e', 'è': 'e', 'ẻ': 'e', 'ẽ': 'e', 'ẹ': 'e',
                'ê': 'e', 'ế': 'e', 'ề': 'e', 'ể': 'e', 'ễ': 'e', 'ệ': 'e',
                'í': 'i', 'ì': 'i', 'ỉ': 'i', 'ĩ': 'i', 'ị': 'i',
                'ó': 'o', 'ò': 'o', 'ỏ': 'o', 'õ': 'o', 'ọ': 'o',
                'ô': 'o', 'ố': 'o', 'ồ': 'o', 'ổ': 'o', 'ỗ': 'o', 'ộ': 'o',
                'ơ': 'o', 'ớ': 'o', 'ờ': 'o', 'ở': 'o', 'ỡ': 'o', 'ợ': 'o',
                'ú': 'u', 'ù': 'u', 'ủ': 'u', 'ũ': 'u', 'ụ': 'u',
                'ư': 'u', 'ứ': 'u', 'ừ': 'u', 'ử': 'u', 'ữ': 'u', 'ự': 'u',
                'ý': 'y', 'ỳ': 'y', 'ỷ': 'y', 'ỹ': 'y', 'ỵ': 'y'
            };
            var result = str.toLowerCase();
            for (var key in map) {
                result = result.replace(new RegExp(key, 'g'), map[key]);
            }
            return result;
        }
        function removeSelected() {
            $(".card.is-selected").each(function () {
                $(this).removeClass('is-selected');
            });
        }
        function replaceElement(element, content) {
            $(element).html('');
            $(element).html(content);
        }
        function showEditor(element) {
            const customername = $("#customername").html();
            const time = convertToDatetimeLocalFormat($("#created_date").html());
            const staff = $("#username").html();
            const note = $("#note").html();
            const address = $("#description").html();
            if ($(element).attr('id') == 'btnEdit') {
                detail.customername = customername;
                detail.time = time;
                detail.staff = staff;
                detail.note = note;
                detail.address = address;
                const editCustomerName = `<p><b>Tên Khách Hàng:</b> <span><input value="${customername}" class="text-edit" id="editCustomerName" type="text"></span></p>`;
                const editTime = `<input value="${time}" id="editTime" class="text-edit" type="datetime-local" />`;
                const editStaff = `<input value="${staff}" class="text-edit" id = "editStaff" type = "text" />`;
                const editNote = `<textarea id="editNote" class="text-edit" rows="2">${note}</textarea>`;
                const editAddress = `<input value="${address}" id="editAddress" class="text-edit" type="text" />`;
                replaceElement($("#customername"), editCustomerName);
                replaceElement($('#created_date'), editTime);
                replaceElement($('#username'), editStaff);
                replaceElement($('#note'), editNote);
                replaceElement($('#description'), editAddress);
                $.get("/ReceiveBill/GetNameStaffCustomer", {}, function (result) {
                    AutoComplete(result.staff, $("#editStaff"))
                    AutoComplete(result.customer, $("#editCustomerName"));
                })
                toggleBtn('on');
            }
            else {
                $('#customername').html(detail.customername)
                $('#created_date').html(convertToDisplayFormat(detail.time))
                $('#username').html(detail.staff)
                $('#note').html(detail.note)
                $('#description').html(detail.address)
                toggleBtn('off');
            }

        }
        function toggleBtn(condition) {
            if (condition == 'on') {
                $("#btnSaveEdit").attr('hidden', false);
                $("#btnCancelEdit").attr('hidden', false);
                $("#btnDelete").attr('hidden', true);
                $("#btnEdit").attr('hidden', true)
                $("#addImages").attr('hidden', false)
                isEditing = true;
            }
            else {
                $("#btnSaveEdit").attr('hidden', true);
                $("#btnCancelEdit").attr('hidden', true);
                $("#btnDelete").attr('hidden', false);
                $("#btnEdit").attr('hidden', false);
                $("#addImages").attr('hidden', true);
                isEditing = false;
            }
        }
        function saveEdit() {
            showSpinner();
            let nameCustomer = $("#editCustomerName").val();
            let time = $("#editTime").val();
            let staff = $("#editStaff").val();
            let note = $("#editNote").val();
            let address = $("#editAddress").val();
            let infoEdit = {
                Customer: nameCustomer,
                Time: time,
                Staff: staff,
                Note: note,
                Address: address
            }
            if (infoEdit.Customer.length == 0 || infoEdit.Customer.Staff == 0 || infoEdit.Customer.Address == 0) {
                $.alert('Vui lòng nhập đầy đủ thông tin', 'Thông báo')
                hideSpinner();
                return;
            } else {
                $.get("/ReceiveBill/CheckNameStaff", { nameStaff: infoEdit.Staff }, function (data) {
                    if (!data.result) {
                        $.alert(data.message, 'Thông báo');
                        hideSpinner()
                        return;
                    } else {
                        var formData = new FormData();
                        $.each(selectedFiles, function (i, v) {
                            formData.append('files', v);
                        });
                        formData.append('time', infoEdit.Time);
                        formData.append('customerName', infoEdit.Customer);
                        formData.append('staff', infoEdit.Staff);
                        formData.append('note', infoEdit.Note);
                        formData.append('address', infoEdit.Address);
                        formData.append('code', $("#btnDelete").attr('data-spcode'))
                        formData.append('folderName', urlImage)
                        $.ajax({
                            url: '/ReceiveBill/EditReceiveBill/',
                            type: 'POST',
                            data: formData,
                            processData: false,
                            contentType: false,
                            success: function (data) {
                                if (data.result) {
                                    $.get("/ReceiveBill/GetImagesByDirectory/", { code: $("#btnDelete").attr('data-spcode') }, function (result) {
                                        updateModal(result)
                                        $('#detailModal').modal('show');
                                    });
                                    afterSave();
                                    selectedFiles = [];
                                    $.alert('Cập nhật thành công', 'Thông Báo')
                                    hideSpinner();
                                } else {
                                    $.get("/ReceiveBill/GetImagesByDirectory/", { code: $("#btnDelete").attr('data-spcode') }, function (result) {
                                        updateModal(result)
                                        $('#detailModal').modal('show');
                                    });
                                    afterSave();
                                    selectedFiles = [];
                                    $.alert('Cập nhật thất bại' + data.error, 'Thông Báo')
                                    hideSpinner();
                                }
                                
                            },
                            error: function (error) {
                                console.error(error);
                            }
                        });
                    }
                })

            }

        }
        function extractPathFromUrl(url) {
            // Thay thế tất cả dấu "\" bằng dấu "/"
            url = url.replace(/\\/g, '/');

            // Sử dụng phương thức split() để tách URL bằng dấu '/'
            var parts = url.split('/');

            // Trích xuất phần bạn quan tâm
            var extractedPath = '/' + parts[1] + '/' + parts[2];

            return extractedPath;
        }
        function extractFileNameFromUrl(url) {
            // Tách URL thành các phần bằng '/'
            var parts = url.split('/');

            // Lấy phần cuối cùng của mảng, đó chính là tên tệp
            var fileName = parts[parts.length - 1];

            return fileName;
        }
        function afterSave() {
            $('#customername').html(detail.customername)
            $('#created_date').html(convertToDisplayFormat(detail.time))
            $('#username').html(detail.staff)
            $('#note').html(detail.note)
            $('#description').html(detail.address)
            toggleBtn('off');
        }
        function getDataInvoice(data) {
            // Xóa nội dung hiện tại của listInvoice
            $("#listInvoice").empty();
            $('#FilterCustomerName').val('')
            if (data.length == 0) {
                $("#listInvoice").append('<p>Không có hóa đơn nào</p>');
                return;
            }

            $.each(data, (index, value) => {
                if (value.LINKED) {
                    var html = '<div class="list-group-item p-0 d-flex justify-content-between align-items-center mt-2 hoadon">' +
                        '<div data-hoadon="' + value.MAHOADON + '" class="border-bot bill-selected"><h6 class="customerName">' + value.TENKHACHHANG + '</h6>' +
                        '<p>' + value.NGAYBAN + '</p>' +
                        '<table class="table table-bordered table-striped table-sm"><thead><tr><th scope="col">Sản phẩm</th><th scope="col">Số lượng</th>' +
                        '<th scope="col">Đơn giá</th><th scope="col">Tổng Tiền</th></tr></thead><tbody>';
                    value.Details.forEach(function (detail) {
                        html += '<tr><td>' + detail.TENSANPHAM + '</td><td>' + detail.SOLUONG + '</td><td>' + formatVND(detail.GIADONVI) + ' VNĐ</td><td>' + formatVND(detail.THANHTIEN) + ' VNĐ</td></tr>';
                    });
                    html += '</tbody></table>' +
                        '<h6>Tổng Tiền: ' + formatVND(value.TONGTIEN) +' VNĐ</h6></div>';
                    // Thêm nội dung HTML vào cuối phần tử có ID là listInvoice
                    $("#listInvoice").append(html);
                } else {
                    var html = '<div class="list-group-item p-0 d-flex justify-content-between align-items-center mt-2 hoadon">' +
                        '<div data-hoadon="' + value.MAHOADON + '" class="border-bot"><h6 class="customerName">' + value.TENKHACHHANG + '</h6>' +
                        '<p>' + value.NGAYBAN + '</p>' +
                        '<table class="table table-bordered table-striped table-sm"><thead><tr><th scope="col">Sản phẩm</th><th scope="col">Số lượng</th>' +
                        '<th scope="col">Đơn giá</th><th scope="col">Tổng Tiền</th></tr></thead><tbody>';
                    value.Details.forEach(function (detail) {
                        html += '<tr><td>' + detail.TENSANPHAM + '</td><td>' + detail.SOLUONG + '</td><td>' + formatVND(detail.GIADONVI) + ' VNĐ</td><td>' + formatVND(detail.THANHTIEN) +  ' VNĐ</td></tr>';
                    });
                    html += '</tbody></table>' +
                        '<h6>Tổng Tiền: ' + formatVND(value.TONGTIEN) + ' VNĐ</h6></div>';
                    // Thêm nội dung HTML vào cuối phần tử có ID là listInvoice
                    $("#listInvoice").append(html);
                }

            });
        }
        function mergeReceiveBill() {
            showSpinner();
            listMahoadon2 = []
            var mahoadon = $('.bill-selected');
            var maphieugiaohang = $("#btnDelete").attr('data-spcode')
            $.each(mahoadon, function () {
                listMahoadon2.push($(this).attr('data-hoadon'))
            });
            $.post('/ReceiveBill/MergeInvoice/', { listMahoadon: listMahoadon2, image: maphieugiaohang }, function (data) {
                //$.alert('Tích hợp thành công', 'Thông Báo');
                if (listMahoadon2.length > 0) {
                    if (!$('div#' + maphieugiaohang + ' p.title-case').find('span').length) {
                        $('div#' + maphieugiaohang + ' p.title-case').append('<span style="color: seagreen"><i class="material-icons align-middle">check_circle</i></span>')
                    }
                } else {
                    if ($('div#' + maphieugiaohang + ' p.title-case').find('span').length) {
                        $('div#' + maphieugiaohang + ' p.title-case').find('span').remove();
                    }
                }
                $('#modalMerge').modal('hide')              
                hideSpinner();
            })
        }
    </script>
}
